{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/App/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positive","Notification","message","FeedbackOptions","onLeaveFeedback","onClick","id","type","Section","title","children","App","state","increasesFeedback","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAwBeA,EAnBI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OACE,qCACE,0CAAaJ,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KACd,sDAAyBC,EAAzB,YCJSC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCoB3BC,EApBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,qCACE,wBAAQC,QAASD,EAAiBE,GAAG,OAAOC,KAAK,SAAjD,kBAGA,wBAAQF,QAASD,EAAiBE,GAAG,UAAUC,KAAK,SAApD,qBAGA,wBAAQF,QAASD,EAAiBE,GAAG,MAAMC,KAAK,SAAhD,qBCKSC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCCDC,G,kNACJC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAKPe,kBAAoB,SAAAC,GAClB,EAAKC,UAAS,SAAAC,GACZ,MAAoB,SAAhBF,EAAEG,OAAOX,GACJ,CAAEV,KAAMoB,EAAUpB,KAAO,GAEd,YAAhBkB,EAAEG,OAAOX,GACJ,CAAET,QAASmB,EAAUnB,QAAU,GAEpB,QAAhBiB,EAAEG,OAAOX,GACJ,CAAER,IAAKkB,EAAUlB,IAAM,QADhC,M,EAMJoB,mBAAqB,WAEnB,OADc,EAAKN,MAAMhB,KAAO,EAAKgB,MAAMf,QAAU,EAAKe,MAAMd,K,EAGlEqB,gCAAkC,WAIhC,OAH2B,EAAKD,qBAC5BE,KAAKC,KAAM,EAAKT,MAAMhB,KAAO,EAAKsB,qBAAwB,KAC1D,G,4CAGN,WACE,OACE,gCACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBL,gBAAiBkB,KAAKT,sBAEzC,cAAC,EAAD,CAASJ,MAAM,aAAf,SACiC,IAA9Ba,KAAKJ,qBACJ,cAAC,EAAD,CACEtB,KAAM0B,KAAKV,MAAMhB,KACjBC,QAASyB,KAAKV,MAAMf,QACpBC,IAAKwB,KAAKV,MAAMd,IAChBC,MAAOuB,KAAKJ,qBACZlB,SAAUsB,KAAKH,oCAGjB,cAAC,EAAD,CAAcjB,QAAQ,kC,GAjDhBqB,IAAMC,YAyDTb,IC3Dfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa198320.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//компонент Статистика.\r\n// В параметрах приходяд пропсы переданные родителем - клаcса App\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\r\n  return (\r\n    <>\r\n      <span>Good: {good}</span>\r\n      <span>Neutral: {neutral}</span>\r\n      <span>Bad: {bad}</span>\r\n      <span>Total: {total}</span>\r\n      <span>Positive feedback:{positive} %</span>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positive: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <button onClick={onLeaveFeedback} id=\"good\" type=\"button\">\r\n        good\r\n      </button>\r\n      <button onClick={onLeaveFeedback} id=\"neutral\" type=\"button\">\r\n        neutral\r\n      </button>\r\n      <button onClick={onLeaveFeedback} id=\"bad\" type=\"button\">\r\n        bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\nimport Statistics from '../Statistics/Statistics.jsx';\nimport Notification from 'components/Notification/Notification.jsx';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions.jsx';\nimport Section from 'components/Section/Section.jsx';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  //state это объект с локальными свойсвами, которые в дальнейшем можем менять.\n  //чтоб поменять stateб мы используем метод this.setState/\n  increasesFeedback = e => {\n    this.setState(prevState => {\n      if (e.target.id === 'good') {\n        return { good: prevState.good + 1 };\n      }\n      if (e.target.id === 'neutral') {\n        return { neutral: prevState.neutral + 1 };\n      }\n      if (e.target.id === 'bad') {\n        return { bad: prevState.bad + 1 };\n      }\n    });\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const positivePersentage = this.countTotalFeedback()\n      ? Math.ceil((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n    return positivePersentage;\n  };\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.increasesFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positive={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}